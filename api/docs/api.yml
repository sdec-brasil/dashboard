openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: Swagger Mocking Server
    url: https://virtserver.swaggerhub.com/tloriato/SDEC-API/1.0.0
info:
  version: "1.0.0"
  title: SDEC API
  description: >-
    This is an example of using OAuth2 Application Flow in a specification to
    describe security to your API.
security:
  - application:
      - read
      - write
tags: 
  - name: Authentication
    description: Endpoints related to your authentication and authorization inside the system.
  - name: Public Data
    description: Endpoints to retrive public information
  - name: User Emitter Related
    description: Endpoints related exclusively to the user emitter information and operation
  - name: Client Related
    description: Endpoints related exclusively to the client information and operation
    
paths:
  /invoices:
    get:
      summary: Retorna uma lista das últimas notas fiscais emitidas
      security: []
      tags: [Public Data]
      description: >-
        Retorna uma lista das últimas notas fiscais emitidas.
      parameters:
        - $ref: '#/components/parameters/EntParam'
        - $ref: '#/components/parameters/EntToParam'
        - $ref: '#/components/parameters/untilParam'
        - $ref: '#/components/parameters/offsetParam'

      responses:
        '200':
          description: OK
    post:
      summary: Emite uma nota fiscal
      tags: [User Emitter Related]
      description: >-
        Emite uma nota fiscal
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: The user to create.
          schema:
            type: object
            required:
              - userName
            properties:
              userName:
                type: string
              firstName:
                type: string
              lastName:
                type: string
      responses:
        '201':
          description: Created
  /invoices/{txid}:
    get:
      summary: Retorna uma nota fiscal com a TxID correspondente
      security: []
      parameters:
        - in: path
          name: txid
          schema:
            $ref: '#/components/schemas/TxID'
          required: true
          description: TxID da Nota Fiscal
      responses:
        '200':
          description: OK
    post:
      summary: >-
        Cria uma nova nota fiscal na blockchain que substitui a nota
        referenciada em txid
      parameters:
        - in: path
          name: txid
          schema:
            $ref: '#/components/schemas/TxID'
          required: true
          description: TxID da Nota Fiscal
      responses:
        '200':
          description: OK
  /user:
    get:
      summary: Retorna informações do usuário autenticado
      description: >-
        Retorna informações do usuário autenticado
      responses:
        '200':
          description: OK
  /users:
    get:
      summary: Retorna informações públicas dos usuários do sistema
      description: >- 
        Retorna informações públicas dos usuários do sistema
        (as informações de registros e estatísticas?)
      security: []
      responses:
        '200':
          description: OK
    post:
      summary: Submete informações para criação de um novo usuário
      description: >- 
        Submete informações para criação de um novo usuário no sistema
        e na blockchain
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: OK
  /users/id:
    get:
      summary: Retorna informações sobre um usuário
      description: >-
        Retorna informações sobre um usuário
      security: []
      parameters:
        - in: path
          name: id
          schema:
            oneOf:
              - $ref: '#/components/schemas/CPF'
              - $ref: '#/components/schemas/CNPJ'
              - $ref: '#/components/schemas/UUID'
              - $ref: '#/components/schemas/EnderecoPublico'
          required: true
      responses:
        '200':
          description: OK


components:
  parameters:

    EntParam:
      in: query
      name: from
      description: >-
        Filtrar por esse ```CNPJ || CPF || GUID || Endereço Público```  como emissor da Nota Fiscal. Se mais de um parâmetro
        "from" for enviado, será feito a união entre eles.
      schema:
        type: string

    EntToParam:
      in: query
      name: to
      description: >-
        Filtrar por esse ```CPNJ || Código IBGE``` como município de 
        incidência.
      schema:
        type: string
      

    untilParam:
      in: query
      name: until
      description: >-
        Resultados após essa data não serão retornados.
      schema:
        type: string
        format: date-time
        example: "2017-07-21T17:32:28Z"

    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
        example: 15
      description: >-
        Número de itens para pular da busca antes de retornar o resultado.

    
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 250
        default: 50
        example: 50
      description: The numbers of items to return.

  schemas:
    Address:
      description: >-
        Endereço Público da Blockchain
      type: string
      minLength: 26
      maxLength: 35
      pattern: ^[13][a-km-zA-HJ-NP-Z0-9]{26,33}$
      example: 1HB5XMLmzFVj8ALj6mfBsbifRoD4miY36v
    TxID:
      description: >-
        String alfanumérica que representa o SHA256 de uma transação na blockchain,
        comumente chamada de Transaction ID (TxId).
      type: string
      pattern: '[A-Fa-f0-9]{64}'
      minLength: 64
      maxLength: 64
      example: 998d1c901447c87698ff7a1c5cab64ad7372d49c71c88446f83e21d54ae7d637
    CPF:
      description: >-
        CPF
      type: string
    CNPJ:
      description: >-
        CNPJ
      type: string
    UUID:
      description: >-
        UUID
      type: string
      format: uuid
    EnderecoPublico:
      description: >-
        Endereço Público na Blockchain
      type: string
    NewUser:
      title: A New User
      type: object
      required:
        - razao
        - logEnd
        - numEnd
        - bairroEnd
        - cidadeEnd
        - estadoEnd
        - cepEnd
        - id
      properties:
        razao:
          description: The user to create.
          type: string
        fantasia:
          description: Nome Fantasia do prestador do serviço.
          type: string
        logEnd:
          description: Tipo e nome do logradouro (Av.., Rua..., ...).
          type: string
        numEnd:
          description: Número do imóvel.
          type: string
        compEnd:
          description: Complemento do endereço do prestador.
          type: string
        bairroEnd:
          description: Bairro do prestador.
          type: string
        cidadeEnd:
          description: Código do município do estabelecimento prestador do serviço (Tabela do IBGE).
          type: integer
          example: 3304557
        estadoEnd:
          description: Sigla da unidade da federação do prestador.
          type: string
          pattern: '[A-F]{2}'
          minLength: 2
          maxLength: 2
          example: RJ
        paisEnd:
          description: Código do país onde o tomador está estabelecido (Tabela do BACEN). Preencher somente se CidadePrestador igual 9999999.
          type: integer
          minimum: 0
          maximum: 9999
          example: 1058
        cepEnd:
          description: Número do CEP.
          type: string
          pattern: '[0-9]{8}'
          minLength: 8
          maxLength: 8
          example: 22040010
        email:
          description: E-mail do prestador.
          type: string
          example: example@email.com
        tel:
          description: Número do telefone do prestador, no formato \<cod pais>\<DDD>\<numero>.
          type: string
          maxLength: 20
          example: 552122357792
        identificacao:
          enum: [1, 2]
          description: >
            Tipo da identificação enviada no campo identidade:
             * `1` - CPF
             * `2` - CNPJ
        identificacao:
          description: Número do CPF/CNPJ do Prestador do Serviço.
          type: string
          maxLength: 14
          example: 13892838278

  securitySchemes:
    application:
      type: oauth2
      flows:
        authorizationCode:
          tokenUrl: 'http://example.com/oauth/token'
          authorizationUrl: 'http://example.com/oauth/token'
        clientCredentials:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources